
A brief overview of the classes / modules.

HAL-4000 (QtGui.QMainWindow)
  
  Selecting settings / parameters files:
    qtParametersBox.QParametersBox (QtGui.QWidget)


  Control of the software via TCP/IP:
    tcpControl.TCPControl (QtNetwork.QTcpServer)


  Camera:
    Control (in the camera directory):
      control.Camera (QtCore.QObject)

      Generating the feeds from the camera data:
        feeds.FeedController(object)

      Getting the camera data from the camera:
        cameraControl.CameraControl(QtCore.QThread)

    Display (in the display directory):
      cameraDisplay.CameraDisplay(QtGui.QDialog, halModule.HalModule)
      
      Camera image display & display setting:
        cameraFrameDisplay.CameraFrameDisplay(CameraFeedDisplay)

        Displaying the images from the camera:
          cameraWidgets.PyCameraWidget(QtGui.QWidget)

      Displaying the camera settings (exposure time, etc)
        paramsDisplay.ParamsDisplay(QtGui.QGroupBox)


  Bluetooth:
    halBluetooth.HalBluetooth (QtCore.QThread, halModule.HalModule)


  Feed Viewers (in the display directory):

    Creating and controlling the feed viewers:
      feedViewer.FeedViewers(QtCore.QObject, halModule.HalModule)

    Displaying a single feed:
      feedViewer.FeedViewer(QtGui.QDialog)

      Feed image display and display settings:
        cameraFrameDisplay.CameraFeedDisplay(QtGui.QFrame)

        Displaying the images from the feeds:
          cameraWidgets.pyCameraWidget(QtGui.QWidget)
          cameraWidgets.CCameraWidget(QtGui.QWidget)
	  

  Illumination / Shutters (in the illumination directory):

    Illumination control dialog:
      illuminationControl.IlluminationControl (QtGui.QDialog, halModule.HalModule)

    Illumination control powers / shutters:

      Control of a single channel:
        illuminationChannel.Channel (QtCore.QObject)
   
        UI for a single channel:
          illuminationChannelUI.ChannelUI (QtGui.QFrame)

      Control of a particular piece of hardware:
          sc_hardware.baseClasses.IlluminationHardware ()


  Stage (in the stagecontrol directory):
    stageControl.StageControl (QtGui.QDialog, halModule.HalModule)

    Thread for talking to the hardware:
      stageThread.QStageThread (QtCore.QThread)


  Focus Lock (in the focuslock directory):
    focusLockZ.FocusLockZ (QtGui.QDialog, halModule.HalModule)

    Feedback control and current offset & position display
      lockDisplay.LockDisplay (QtGui.QWidget)

      Specialized for QPD display:
        lockDisplay.LockDisplayQPD (LockDisplay)

      Specialized for a USB camera:
        lockDisplay.LockDisplayCam (LockDisplay)

      The focus lock modes:
        lockModes.LockMode (QtCore.QObject)
          lockModes.NoLockMoke (LockMode)
          ...

      Displaying focus lock information:
        lockDisplayWidgets.QStatusDisplay (QtGui.QWidget)
          lockDisplayWidgets.QSumDisplay (QStatusDisplay)
          lockDisplayWidgets.QOffsetDisplay (QStatusDisplay)
            lockDisplayWidgets.QStageDisplay (QOffsetDisplay)
          lockDisplayWidgets.QQPDDisplay (QStatusDisplay)
        lockDisplayWidgets.QCamDisplay (QtGui.QWidget)

      Interface to the hardware:
        stageOffsetControl.stageQPDThread (QtCore.QThread)

        Specialized for the addition of motorized Z:
          stageOffsetControl.motorStageQPDThread (QtCore.QThread)

        Specialized for USB camera instead of a QPD:
          stageOffsetControl.stageCamThread (stageQPDThread)


  Spot Counter:
    spotCounter.SpotCounter (QtGui.QDialog, halModule.HalModule)

    Handling the spot counting:
      qtSpotCounter.QObjectCounter (QtGui.QWidget)


  Miscellaneous hardware (in the miscControl directory):
    miscControl.MiscControl (QtGui.QDialog, halModule.HalModule)


  Laser power progressions:
    progressionControl.ProgressionControl (QtGui.QDialog, halModule.HalModule)


  Joystick (in the joystick directory):
    joystick.JoystickObject (QtCore.QObject, halModule.HalModule)


  TCP/IP
    halTcpControl.HalTCPControl (TCPServer, halModule.HalModule)
